```{r}
N_pca_to_keep <- readRDS(file=fs::path(r_objects_folder, "062_N_pca_to_keep.rds"))
glmnet_res_93 <- readRDS(file=fs::path(r_objects_folder, "070_glmnet_res_93.rds"))
glmnet_final_93  <- readRDS(file=fs::path(r_objects_folder, "070_glmnet_final_93.rds"))
glmnet_res_7 <- readRDS(file=fs::path(r_objects_folder, "070_glmnet_res_7.rds"))
glmnet_final_7  <- readRDS(file=fs::path(r_objects_folder, "070_glmnet_final_7.rds"))
glmnet_res_14 <- readRDS(file=fs::path(r_objects_folder, "070_glmnet_res_14.rds"))
glmnet_final_14  <- readRDS(file=fs::path(r_objects_folder, "070_glmnet_final_14.rds"))
glmnet_res_32 <- readRDS(file=fs::path(r_objects_folder, "070_glmnet_res_32.rds"))
glmnet_final_32  <- readRDS(file=fs::path(r_objects_folder, "070_glmnet_final_32.rds"))
```


# Fitting the models

The elastic net models were fit on four variable sets:

-   The first `r N_pca_to_keep` PCA components from the set of 93 variables.

-   The set of 7 PCA components from the 7 variables that had three or more votes from the expert panel

-   The set of 14 PCA components from the 14 variables that had two or more votes from the expert panel

-   The first `r N_pca_to_keep` PCA components from the 32 variables that had one or more votes from the expert panel



**Model tuning**

The training data was into 10 cross-validation sets.

The elastic net models were tuned using 25 sets of possible values.

These are the hyperparameters that were tuned:

-   Elastic net: alpha (mixture between lasso and ridge regression)




These are the hyperparameters that have the best RMSE for the elastic net model:

Model using the first `r N_pca_to_keep` of 93 PCA components.

```{r}
# collect_metrics(glm_res)
# collect_metrics(glmnet_res)
autoplot(glmnet_res_93)
show_best(glmnet_res_93, metric = "rmse")
```

Model using the 7 PCA components from variables that had three or more votes from the expert panel.

```{r}
autoplot(glmnet_res_7)
show_best(glmnet_res_7, metric = "rmse")
```

Model using the 14 PCA components from variables that had two or more votes from the expert panel.

```{r}
autoplot(glmnet_res_14)
show_best(glmnet_res_14, metric = "rmse")
```

Model using the first `r N_pca_to_keep` of 32 PCA components from variables that had one or more votes from the expert panel.

```{r}
autoplot(glmnet_res_32)
show_best(glmnet_res_32, metric = "rmse")
```



# Performance in testing set

## Elastic net

Model using the first `r N_pca_to_keep` of 93 PCA components.

```{r}
collect_metrics(glmnet_final_93)
glmnet_final_93 %>%
  collect_predictions() %>%
  cal_plot_regression(
    truth = vdgcp_slope72m,
    estimate = .pred,
    alpha = .5
  ) +
  ggtitle("Elastic net - Testing set (93 variables)") +
  hrbrthemes::theme_ipsum()


```

Model using the 7 PCA components from variables that had three or more votes from the expert panel.

```{r}
collect_metrics(glmnet_final_7)
glmnet_final_7 %>%
  collect_predictions() %>%
  cal_plot_regression(
    truth = vdgcp_slope72m,
    estimate = .pred,
    alpha = .5
  ) +
  ggtitle("Elastic net - Testing set (7 variables)") +
  hrbrthemes::theme_ipsum()


```

Model using the 14 PCA components from variables that had two or more votes from the expert panel.

```{r}
collect_metrics(glmnet_final_14)
glmnet_final_14 %>%
  collect_predictions() %>%
  cal_plot_regression(
    truth = vdgcp_slope72m,
    estimate = .pred,
    alpha = .5
  ) +
  ggtitle("Elastic net - Testing set (14 variables)") +
  hrbrthemes::theme_ipsum()


```

Model using the first `r N_pca_to_keep` of 32 PCA components from variables that had one or more votes from the expert panel.

```{r}
collect_metrics(glmnet_final_32)
glmnet_final_32 %>%
  collect_predictions() %>%
  cal_plot_regression(
    truth = vdgcp_slope72m,
    estimate = .pred,
    alpha = .5
  ) +
  ggtitle("Elastic net - Testing set (32 variables)") +
  hrbrthemes::theme_ipsum()


```


